language: c
compiler: gcc

sudo: required

services:
    - docker

jobs:
    include:
        - stage: build docker image
          before_script: &update
              # Ensure the latest version of docker is installed
              - sudo apt-get update
              - sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce
              - docker --version
              - env > .env
              - find $CI_DIR -maxdepth 1 -type f -exec cp -t . {} +
          script:
              - echo "ENV GIT_SHA ${TRAVIS_COMMIT}" >> Dockerfile
              - echo "ENV MACHINE_ID ${MACHINE_ID}" >> Dockerfile
              - echo "$(git log -1 ${TRAVIS_COMMIT})" > COMMITINFO
                # Build container for current user
              - |
                  docker build \
                  --build-arg DOCKER_USER=$USER \
                  --build-arg DOCKER_USER_UID=`id -u` \
                  --build-arg DOCKER_USER_GID=`id -g` \
                  --force-rm -t ${DOCKER_REPOSITORY}:${TRAVIS_COMMIT} --pull=true .
              - docker login -u="${DOCKER_USERNAME}" -p="${DOCKER_PASSWORD}"
              - docker push ${DOCKER_REPOSITORY}

        - stage: build
          before_script: *update
          script:
              - docker run -dit --name travis_build ${DOCKER_REPOSITORY}:${TRAVIS_COMMIT} bash
              - docker exec -u 0 -ti travis_build bash -c "echo ${MACHINE_ID} > /etc/machine-id"
              - docker exec -ti travis_build meson build
              - docker exec -ti travis_build ninja -C build
                # Commit it to the new image that will be used for testing
              - docker commit -m "systemd build state" -a "${AUTHOR_NAME}" travis_build ${DOCKER_REPOSITORY}:${TRAVIS_COMMIT}
              - docker login -u="${DOCKER_USERNAME}" -p="${DOCKER_PASSWORD}"
              - docker push ${DOCKER_REPOSITORY}:${TRAVIS_COMMIT}

        - stage: test
          before_script: *update
          script:
              - docker run --privileged --net=host -dit --name travis_test ${DOCKER_REPOSITORY}:${TRAVIS_COMMIT} bash
              - docker exec -ti travis_test ninja -C build test
              - docker commit -m "systemd test state" -a "${AUTHOR_NAME}" travis_test ${DOCKER_REPOSITORY}:${TRAVIS_COMMIT}
              - docker login -u="${DOCKER_USERNAME}" -p="${DOCKER_PASSWORD}"
              - docker push ${DOCKER_REPOSITORY}:${TRAVIS_COMMIT}

        - stage: coverity scan
          before_script: *update
          env:
              - COVERITY_SCAN_PROJECT_NAME=CermakM/systemd # FIXME
              - COVERITY_SCAN_NOTIFICATION_EMAIL="${AUTHOR_EMAIL}"
              - COVERITY_SCAN_BRANCH_PATTERN=travis-docker # FIXME
              - COVERITY_SCRIPT="$CI_TOOL_DIR/coverity.sh"
                # Disable CCACHE for cov-build to compilation units correctly
              - CCACHE_DISABLE=1
              # The next declration is the encrypted COVERITY_SCAN_TOKEN, created
              #   via the "travis encrypt" command using the project repo's public key
              #   Token for test systemd project
              - secure: "FOfIhGZcIViZtG7hHu5WSSgtuD0BcIr+AkTvBCosFX4cgNAxy7SAXcoq/7Nod2i6gceSY0OyoDVt2MY5Iy9wfU6wMklkpqZim/F/sdihrBjJWnybwVPROcZrXeCjJbdo5ak57KQ5p+hKPJRnPlTSUKzF14VXq6SGJV+jJq+wHj7r8NdC2+6owsh5zFrLarOL5d7yzPbQVBXQtkf2h+0o+ylKNT1OTASl4ba/HIgJaWYu1QQwiyNF7lmtZ2QEQG4t4+AYfI8//lDdiEv/sDAPfqmR+5hO/NCAn+nCIYbXULQoiuUg4pZ+As7lQS9Ti0yTlnnac7xo8TetNCNF/oZLQY5IXpZCHIFFJWI+9lxN+Ni2g79iKda9a9U1dyCJDd8kBixFvD2nFTjODjNE6GaADMTj6sSyaxLoBAJA0DZeGk95aqZK2BJHU+jqHTDL62S3etpu/Xsq/xCRzPQHL1NXMtS/Ne9v7LAEVlqpqPI1xAI+rJL2m5ZaAPM3MeufB2pleBcSHBBnaiy0ZPnfMVdZFWPPog7uoJTZsVB7ze4mwoeHKRMtjTfMYlGwf0hkPWyeUgn2m1Dvppq+vEeBI768g+LXXDytiqqjYdWnBYl4UBFnjjlufHvkZtZrg5psWEwhhHij+cqb4x7uy7avuVEX5GbGPZVPbjU8I0VpND0pl68="
              # Token for systemd/systemd FIXME
              # - secure: "UNQLspT89GYWuVKFqW5W5RyqqnYg5RvX20IrNraOddhpdV9nhKBtozrfmhGXDGZwfHGWHt6g7YROlD/NIMvDvThVJIEYvSQiXCoo2zRrwkl2siET5MjPfRG8numiLq0KX47KGmyBJISJZCgDUdNGqqGwgf7AhDN78I3XtgqjFT1z0mGl8n0wiFpKPi7i3nECvF4Mk7xCCHqwByaq0z5G9NkVlOvP1EyCxwv3B6I5Umfch7ibp7iH44YnVXILK+yEry5dMuctYwYkDouR80ChEPQQ5fhhpO4++HJmFuSpfMTeCHpucAd2xwSUijejYeN/GNQ177GxSSk/8hRBGcuSK8T/WJ+KiuJPhZObV8mw+a6+qdQssWY4F9jya5ZKbZ/yTbxjtQ0m4AgtL28P9bEze8pLh16zFMX+hIEuoFSNmJqmtNttfbD5TKyYVZml59s9wvhlvMnlNpRSQva88OAOjXtiA41g+XtTxxpfW9mgd7HYhzSBs1efNiK7PfkANgve7KIYMAmCAqasgb1IIAyX7stOlJH06QOFXNH55PmJLkkKyL3SMQzgryMDWegU+XbS8t43r0x14WLuE7sc9JtnOr/G8hthFaMRp8xLy9aCBwyEIkEsyWa50VMoZDa3Spdb4r1CKBwcGdCbyE4rCehwEIznbfrsSovhwiUds7bbhBU="
          script:
              - |
                  docker build \
                  --build-arg DOCKER_USER=$USER \
                  --build-arg DOCKER_USER_UID=`id -u` \
                  --build-arg DOCKER_USER_GID=`id -g` \
                  --force-rm -t ${DOCKER_REPOSITORY}:${TRAVIS_COMMIT} --pull=true .
              # For kernel version 4.8+
              - sudo sysctl vsyscall=emulate || true
                # Make sure wget is installed
              - sudo apt-get update && sudo apt-get -y install wget
                # Prepare environment for Coverity tool
              - |
                  PLATFORM=`uname`
                  export TOOL_BASE="/tmp/coverity-scan-analysis"
                  export SCAN_URL="https://scan.coverity.com"
                  export UPLOAD_URL="https://scan.coverity.com/builds"
                  export TOOL_ARCHIVE="/tmp/cov-analysis-${PLATFORM}.tgz"
                # Get Coverity tool
              - $CI_TOOL_DIR/get-coverity.sh
              - TOOL_DIR="$(find $TOOL_BASE -type d -name 'cov-analysis*')"

                # Apply coverity patches
              - $CI_SCRIPT_DIR/autopatch-coverity.sh $TOOL_DIR
                # Apply systemd patches
              - $CI_SCRIPT_DIR/autopatch-systemd.sh $TRAVIS_BUILD_DIR

              #- |
              #    find $TOOL_DIR -regex '.*/compiler-compat-g[c+]+.h' -exec sh -c '\
              #                           printf "\n\
              #                                   #if __GNUC__ == 7 && __GNUC_MINOR__ >= 1\n\
              #                                   #define _Float128 long double\n\
              #                                   #endif\n" >> $1' -- {} \;

                # Export env variables for Coverity scan
              - env | grep -E "TRAVIS|COV|TOOL|URL" > .cov-env
              - |
                  docker run -dit --env-file .cov-env \
                  -v ${TOOL_BASE}:${TOOL_BASE}:ro \
                  --name travis_coverity_scan ${DOCKER_REPOSITORY}:${TRAVIS_COMMIT} bash
                # Make sure Coverity script is executable
              - if [[ ! -x "${COVERITY_SCRIPT}" ]] ; then chmod +x ${COVERITY_SCRIPT} ; fi
              - docker cp ${COVERITY_SCRIPT} travis_coverity_scan:/usr/local/bin
                # Preconfigure with meson to prevent Coverity from capturing meson metadata
              - docker exec -it travis_coverity_scan meson cov-build
                # Run Coverity Analysis
              - docker exec -it travis_coverity_scan ${COVERITY_SCRIPT}
                # Remove cov-build directory - not necessary to commit
              - docker exec -it travis_coverity_scan rm -rf cov-build
        - stage: clean docker
          env:
            - SIZE_LIMIT="3000" # Limit in MBs
            - TAG_LIMIT="3" # Number of tags to be kept at the time
          script:
                # Get docker-remote tool and setup venv
              - sudo $CI_TOOL_DIR/get-docker-remote.sh
                # Activate virtual environment
              - source venv/bin/activate
              # Check the size and tag limit of the repo
              - REPO_SIZE=$(docker-remote repository --size $DOCKER_REPOSITORY)
              - TAG_COUNT=$(docker-remote tags --count $DOCKER_REPOSITORY)
              - 'echo -e "\033[33;1mCurrent repository size: $REPO_SIZE in $TAG_COUNT tags \033[0m"'
              # FIXME --assumeyes
              - |
                  if [[ ${REPO_SIZE%.*} -gt $SIZE_LIMIT ]] || [[ $TAG_COUNT -gt $TAG_LIMIT ]]
                  then
                      docker-remote --login $DOCKER_USERNAME:$DOCKER_PASSWORD \
                      tags --assumeno --pop-back --keep $TAG_LIMIT $DOCKER_REPOSITORY
                  fi



# Specify the order of stages and conditions
stages:
    - name: build docker image
      if: env(COVERITY_SCAN_BRANCH) != 1 AND type = cron # FIXME
    - name: build
      if: env(COVERITY_SCAN_BRANCH) != 1 AND type = cron # FIXME
    - name: test
      if: env(COVERITY_SCAN_BRANCH) != 1 AND type = cron # FIXME
      # This stage runs separately, the resulting container will not be pushed to Docker Hub
    - name: coverity scan
      # if: type = cron # FIXME
      # Check for repository size when cron job is triggered and clean repo if necessary
    - name: clean Docker
      if: type = cron FIXME
env:
    global:
        - DOCKER_REPOSITORY=$DOCKER_USERNAME/systemd
        - AUTHOR_NAME="$(git log -1 $TRAVIS_COMMIT --pretty=\"%aN\")"
        - AUTHOR_EMAIL="$(git log -1 $TRAVIS_COMMIT --pretty=\"%aE\")"

        - MACHINE_ID=$(cat /var/lib/dbus/machine-id)

        - CI_DIR="$TRAVIS_BUILD_DIR/ci"
        - CI_TOOL_DIR="$CI_DIR/tools"
        - CI_PATCH_DIR="$CI_DIR/patches"
        - CI_SCRIPT_DIR="$CI_DIR/scripts"


# Allow travis builds only for master branch
branches:
    only:
        travis-docker # FIXME

# notifications:
#   email:
#     recipients:
#       - ${ADMIN_EMAIL}
#       - ${AUTHOR_EMAIL}
#   irc:
#     channels:
#       - "irc.freenode.org#systemd"
#     on_success: change
#     on_failure: always
