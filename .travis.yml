language: c
compiler: gcc

sudo: required

services:
    - docker

install:
    - docker build -t ${DOCKER_REPOSITORY}:${TRAVIS_COMMIT} --pull=true .

# Run standard script stage before the Coverity Scan
jobs:
    include:
        - stage: build docker image
          script:
            - sudo apt-get update
            - echo "ENV GIT_SHA ${TRAVIS_COMMIT}" >> Dockerfile
            - echo "ENV MACHINE_ID ${MACHINE_ID}" >> Dockerfile
            - sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce
            - docker --version

        - stage: run docker container
          script:
            - docker run --privileged --net=host -dit --name ${TRAVIS_COMMIT} ${DOCKER_REPOSITORY}:${TRAVIS_COMMIT} bash
            - docker ps -a
            - docker exec -u 0 -ti ${TRAVIS_COMMIT} bash -c "echo ${MACHINE_ID} > /etc/machine-id"
        - stage: build
          script:
            - docker exec -ti ${TRAVIS_COMMIT} meson build
            - docker exec -ti ${TRAVIS_COMMIT} ninja -C build

        - stage: test
          script:
            - docker exec -ti ${TRAVIS_COMMIT} ninja -C build test
        # Future idea
        # - stage: coverity scan
        #   addons:
    #     coverity_scan:
    #         project:
    #             name: systemd/systemd  # GitHub project name FIXME
    #             description: systemd System and Service Manager

    #         notification_email: macermak@redhat.com

    #         # Commands to prepare for build
    #         build_command_prepend: meson build

    #         # The command that will be added as an argument to "cov-build" to compile your project for analysis,
    #         build_command: ninja -C build
    #

# Specify the order of stages and conditions
stages:
    - name: build docker image
    - name: run docker container
    - name: build
      if: env(COVERITY_SCAN_BRANCH) != 1
    - name: test
      if: env(COVERITY_SCAN_BRANCH) != 1
    # - name: coverity scan
    #   if: env(TRAVIS_EVENT_TYPE) = cron

after_failure: 
  - docker exec -ti ${TRAVIS_COMMIT} cat build/meson-logs/testlog.txt

# Temporary solution - only for testing purposes, delete afterwards
branches:
    only:
        travis-docker

env:
    global:
        - DOCKER_REPOSITORY=travis/systemd
        - MACHINE_ID=$(cat /var/lib/dbus/machine-id)

before-script:
    - env > .env

# notifications:
#   irc:
#     channels:
#       - "irc.freenode.org#systemd"
#     on_success: change
#     on_failure: always

# env:
#     global:
#         # COVERITY_SCAN_TOKEN
#         - secure:  # TODO

# Better to put this in jobs if possible - could be easily controled with cron
# addons:
#     coverity_scan:
#         project:
#             name: systemd/systemd  # GitHub project name FIXME
#             description: systemd System and Service Manager

#         notification_email: macermak@redhat.com

#         # Commands to prepare for build
#         build_command_prepend: meson build

#         # The command that will be added as an argument to "cov-build" to compile your project for analysis,
#         build_command: ninja -C build
